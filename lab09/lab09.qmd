---
title: "lab09: Mini Project"
author: "Ebony Michelle Argaez (PID: A59026556)"
format: pdf
editor: visual
---

## 1. Exploratory data Analysis

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)

head(wisc.df)
```


```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
```

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis)
diagnosis

```

Exploratory data analysis
 >Q1. How many observations are in this dataset?
 
```{r}
dim(wisc.data)
```
 
 569 observations. 
 
 >Q2. How many of the observations have a malignant diagnosis? 
 
```{r}
library(tidyverse)

M <- wisc.df %>% filter(diagnosis== "M")
dim(M)
```
 
212 with malignant diagnosis

>Q3. How many variables/features in the data are suffixed with _mean?

10 variables (counted them)
```{r}
grep("_mean", colnames(wisc.data), value=T)
```


## 2. Principal Component Analysis

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)

```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale=T)
```

```{r}
# Look at summary of results
summary(wisc.pr)
```

>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

```{r}
v <- summary(wisc.pr)
pcvar <- v$importance[3,]
pcvar["PC1"]
```


44.27% 

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

```{r}
which(pcvar >= 0.7)[1]
```

3

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

```{r}
which(pcvar>= 0.9)[1]
```

7

Interpreting PCA results

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

```{r}
biplot(wisc.pr)
```

It's a lot....really messy. I don't understand what I'm supposed to look at. 

```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x, col = diagnosis, xlab = "PC1", ylab = "PC2")
```

>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots? 

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[,1],wisc.pr$x[,3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")
```

They look very similar but PC2 accounts for more variation than PC3. This is based on how the points are spread across in PC2 compared to PC3. 

```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

Variance explained
```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

Communicating PCA results

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
wisc.pr$rotation["concave.points_mean",1]
```


## 3. Hierachical clustering

```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
```

```{r}
data.dist <- dist(data.scaled, method="euclidean")

```

```{r}
wisc.hclust <- hclust(data.dist, method="complete")
wisc.hclust
```

>Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)

```

Selecting numbers of clusters
```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, h=19)
```

```{r}
table(wisc.hclust.clusters, diagnosis)
```

Using different methods

>Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

```{r}
wisc.hclust.S <- hclust(data.dist, method="single")
wisc.hclust.S

plot(wisc.hclust.S)
abline(h=19, col="red", lty=2)
```


```{r}
wisc.hclust.A <- hclust(data.dist, method="average")
wisc.hclust.A

plot(wisc.hclust.A)
abline(h=19, col="red", lty=2)
```


```{r}
wisc.hclust.W <- hclust(data.dist, method="ward.D2")
wisc.hclust.W

plot(wisc.hclust.W)
abline(h=19, col="red", lty=2)
```

Ward.D2 gives my favorite results because it's more aesthetically pleasing. It looks cleaner and spread out. 

## 4. Combining methods

```{r}
data.dist.pca<-dist(wisc.pr$x[,1:7])
wisc.pr.hclust <- hclust(data.dist.pca, method="ward.D2")

grps <- cutree(wisc.pr.hclust, k=2)
table(grps)
```

```{r}
table(grps, diagnosis)
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)
```

```{r}
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)
```

```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(data.dist.pca, method="ward.D2")
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=2)
```

>Q13. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters, diagnosis)
```
It did pretty good because the majority of benign and malignant is classified correctly. 

>Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

This is worst because there are more false positives. 

```{r}
table(wisc.hclust.clusters, diagnosis)
```

```{r}
wisc.pr.hclust.ward <- hclust(data.dist.pca, method="ward.D2")
wisc.pr.hclust.clusters.ward <- cutree(wisc.pr.hclust.ward, k=4)
table(wisc.pr.hclust.clusters.ward, diagnosis)
```

```{r}
wisc.pr.hclust.complete <- hclust(data.dist.pca, method="complete")
wisc.pr.hclust.clusters.complete <- cutree(wisc.pr.hclust.complete, k=4)
table(wisc.pr.hclust.clusters.complete, diagnosis)
```

```{r}
wisc.pr.hclust.average <- hclust(data.dist.pca, method="average")
wisc.pr.hclust.clusters.average <- cutree(wisc.pr.hclust.average, k=4)
table(wisc.pr.hclust.clusters.average, diagnosis)
```
```{r}
wisc.pr.hclust.single <- hclust(data.dist.pca, method="single")
wisc.pr.hclust.clusters.single <- cutree(wisc.pr.hclust.single, k=4)
table(wisc.pr.hclust.clusters.single, diagnosis)
```


## 5. Sensitivity/Specificity

Optional

## 6. Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

>Q16. Which of these new patients should we prioritize for follow up based on your results?

Patient 2: I would prioritize because they are malignant. 

